{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/work/Marvel-site/marvel_starter/src/components/charList/CharList.js\";\nimport { Component } from 'react';\nimport Spinner from '../spiner/spiner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false,\n      newItemLoading: false,\n      offset: 260,\n      charEnded: false\n    };\n    this.marvelService = new MarvelService();\n    this.onRequest = offset => {\n      this.onCharListLoading();\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n    this.onCharListLoading = () => {\n      this.setState({\n        newItemLoading: true\n      });\n    };\n    this.onCharListLoaded = newcharList => {\n      let ended = false;\n      if (newcharList.length < 9) {\n        ended = true;\n      }\n      this.setState(({\n        offset,\n        charList\n      }) => ({\n        charList: [...charList, ...newcharList],\n        loading: false,\n        newItemLoading: false,\n        offset: offset + 9,\n        charEnded: ended\n      }));\n    };\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n    this.itemRefs = [];\n    this.setRef = ref => {\n      this.itemRefs.push(ref);\n    };\n    this.focusOnItem = id => {\n      this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n      this.itemRefs[id].classList.add('char__item_selected');\n      this.itemRefs[id].focus();\n    };\n  }\n  componentDidMount() {\n    this.onRequest();\n  }\n  renderItems(arr) {\n    const items = arr.map(item => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        tabIndex: 0,\n        ref: this.setRef,\n        onClick: () => {\n          this.props.onCharSelected(item.id);\n          this.focusOnItem(i);\n        },\n        onKeyPress: e => {\n          if (e.key === ' ' || e.key === 'Enter') {\n            this.props.onCharSelected(item.id);\n            this.focusOnItem(id);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: \"item.name\",\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    const {\n      charList,\n      error,\n      loading,\n      offset,\n      newItemLoading,\n      charEnded\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        disabled: newItemLoading,\n        style: {\n          'display': charEnded ? 'none' : 'block'\n        },\n        onClick: () => this.onRequest(offset),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n}\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;","map":{"version":3,"names":["Component","Spinner","ErrorMessage","MarvelService","PropTypes","jsxDEV","_jsxDEV","CharList","constructor","args","state","charList","loading","error","newItemLoading","offset","charEnded","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","setState","newcharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","id","forEach","item","classList","remove","add","focus","componentDidMount","renderItems","arr","items","map","imgStyle","thumbnail","className","tabIndex","onClick","props","onCharSelected","i","onKeyPress","e","key","children","src","alt","style","fileName","_jsxFileName","lineNumber","columnNumber","name","render","errorMessage","spinner","content","disabled","propTypes","func","isRequired"],"sources":["/Users/macbook/work/Marvel-site/marvel_starter/src/components/charList/CharList.js"],"sourcesContent":["import { Component } from 'react';\nimport Spinner from '../spiner/spiner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 260,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newcharList) => {\n        let ended = false;\n        if(newcharList.length < 9){\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newcharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(arr) {\n        const items = arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n        \n\n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                        }}\n                    onKeyPress = {(e) => {\n                        if(e.key === ' ' || e.key === 'Enter') {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(id);\n                        }\n                    }}>\n\n                        <img src={item.thumbnail} alt=\"item.name\" style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render () {\n        const {charList, error, loading, offset, newItemLoading, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n\n                <button \n                    className=\"button button__main button__long\"\n                    disabled = {newItemLoading}\n                    style={{'display' : charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}