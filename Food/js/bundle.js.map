{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://food/./js/modules/modal.js","webpack://food/./js/script.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/modules/cards.js","webpack://food/./js/services/services.js","webpack://food/./js/modules/calculator.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/slider.js"],"sourcesContent":["// Ф-ція відкриття модального вікна\nfunction openModal(modalSelector, modalTimerId) {\n    const modal = document.querySelector(modalSelector);\n\n    modal.classList.add('show');\n    modal.classList.remove('hide');\n    document.body.style.overflow = 'hidden';\n    clearInterval(modalTimerId); // Очищає таймер відкриття модального вікна, у випадку, коли користувач сам відкрив модалку завчасно\n\n    if (modalTimerId) {\n        clearInterval(modalTimerId);\n    }\n}\n\n// Ф-ція закриття модального вікна\nfunction closeModal(modalSelector){\n    const modal = document.querySelector(modalSelector);\n\n    modal.classList.add('hide');\n    modal.classList.remove('show');\n    document.body.style.overflow = '';\n}\n\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\n    // Modal\n\n    // Створюємо змінні для відслідковування натискання на кнопки та змінну на модальне вікно\n    const modalTrigger = document.querySelectorAll(triggerSelector),\n          modal = document.querySelector(modalSelector);\n          //modalCloseBtn = document.querySelector('[data-close]');\n\n    // Перебираємо за допомогою циклу всі кнопки на сторінці та додаємо подію клік, що викликатиме ф-цію openModal()\n    modalTrigger.forEach(btn => {\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId)); // всередині обробників подій не можна одразу викликати ф-цію, тому, за потреби використовується наступний синтаксис \"() =>\", що дозволить нам передати значення в ф-цію без завчасного виклику\n    });\n\n    \n\n    //modalCloseBtn.addEventListener('click', closeModal); // Обробник події при натисканні на хрестик, модальне вікно закриватиметься\n\n    // Ф-ція, яка закриватиме модальне вікно при натисканні поза області модального вікна\n    modal.addEventListener('click', (e) => {\n        if(e.target === modal || e.target.getAttribute('data-close') == ''){\n            closeModal(modalSelector);\n        }\n    });\n\n    //Закриття модального вікна при натисканні ESC\n    document.addEventListener('keydown', (e) => {\n        if(e.code === 'Escape' && modal.classList.contains('show')){\n            closeModal(modalSelector);\n        }\n    })\n\n\n    \n\n\n    function showModalByScroll() {\n        if(window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModal(modalSelector, modalTimerId);\n            window.removeEventListener('scroll', showModalByScroll);\n        }\n    }\n\n    window.addEventListener('scroll', showModalByScroll);\n}\n\nexport default modal;\nexport {closeModal};\nexport {openModal};\n\n\n\n","import tabs from './modules/tabs'\nimport modal from './modules/modal';\nimport timer from './modules/timer';\nimport cards from './modules/cards';\nimport calculator from './modules/calculator';\nimport forms from './modules/forms';\nimport slider from './modules/slider';\nimport {openModal} from './modules/modal';\n\nwindow.addEventListener('DOMContentLoaded', function() {\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);\n\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\n    modal('[data-modal]', '.modal', modalTimerId);\n    timer('.timer', '2024-08-11');\n    cards();\n    calculator();\n    forms('form', modalTimerId);\n    slider({\n        container: '.offer__slider',\n        slide: '.offer__slide',\n        nextArrow: '.offer__slider-next',\n        prevArrow: '.offer__slider-prev',\n        totalCounter: '#total',\n        currentCounter: '#current',\n        wrapper: '.offer__slider-wrapper',\n        field: '.offer__slider-inner'\n    });\n});","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\n    // Tabs\n    \n\tlet tabs = document.querySelectorAll(tabsSelector),\n    tabsContent = document.querySelectorAll(tabsContentSelector),\n    tabsParent = document.querySelector(tabsParentSelector);\n\n    function hideTabContent() {\n        \n        tabsContent.forEach(item => {\n            item.classList.add('hide');\n            item.classList.remove('show', 'fade');\n        });\n\n        tabs.forEach(item => {\n            item.classList.remove(activeClass);\n        });\n    }\n\n    function showTabContent(i = 0) {\n        tabsContent[i].classList.add('show', 'fade');\n        tabsContent[i].classList.remove('hide');\n        tabs[i].classList.add(activeClass);\n    }\n\n    hideTabContent();\n    showTabContent();\n\n    tabsParent.addEventListener('click', function(event) {\n        const target = event.target;\n        if(target && target.classList.contains(tabsSelector.slice(1))) {\n            tabs.forEach((item, i) => {\n                if (target == item) {\n                    hideTabContent();\n                    showTabContent(i);\n                }\n            });\n        }\n    });\n}\n\nexport default tabs;","function timer(id, deadline ) { \n\n    // Функція для обчислення залишкового часу до кінцевої дати\n    function getTimeRemaining(endtime) {\n\n        // Обчислюємо різницю між кінцевою датою та поточною датою в мілісекундах\n        const t = Date.parse(endtime) - Date.parse(new Date()),\n        \n              // Створення змінних для днів, годин, хвилин, секунд\n              days = Math.floor((t / (1000 * 60 * 60 * 24))),\n              seconds = Math.floor((t / 1000) % 60),\n              minutes = Math.floor((t / 1000 / 60) % 60),\n              hours = Math.floor((t / (100 * 60 * 60) % 24));\n\n        // Повертаємо обʼєкт зі значеннями залишку часу\n        // Оскільки при додаванні в ретурн значень через {} - повертається обʼєкт\n        return {\n            'total' : t,\n            'days' : days,\n            'hours' : hours,\n            'minutes' : minutes,\n            'seconds' : seconds,\n        };\n    }\n\n    function getZero(num) {\n        if(num >= 0 && num < 10){\n            return '0' + num;\n        } else {\n            return num;\n        }\n    }\n\n    // Функція для встановлення значень на сторінку: selector - таймер, який передається при виклику ф-ції (за класом), endtime - deadline\n    function setClock(selector, endtime) {\n        // Знаходимо таймер та всі його ячейки, що відповідають за час\n        const timer = document.querySelector(selector),\n              days = timer.querySelector('#days'),\n              hours = timer.querySelector('#hours'),\n              minutes = timer.querySelector('#minutes'),\n              seconds = timer.querySelector('#seconds'),\n\n              // Встановлюємо інтервал оновлення таймеру (1 секунда)\n              timeInterval = setInterval(updateClock, 1000);\n\n        // Одразу при завантаженні сторінки, оновлюємо таймер\n        updateClock();\n\n        // Функція для оновлення значень таймера\n        function updateClock() {\n            \n            // Передаємо значення залишку часу\n            const t = getTimeRemaining(endtime);\n\n            // Оновлюємо значення в DOM за допомогою .innerHtml\n            days.innerHTML = getZero(t.days);\n            hours.innerHTML = getZero(t.hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n\n            // Зупинка таймеру, як вийде час\n            if (t.total <= 0) {\n                clearInterval(timeInterval);\n            }\n        }\n    }\n\n    // Виклик ф-ції оновлення\n    setClock(id, deadline);\n}\n\nexport default timer;","import { getResource } from \"../services/services\";\n\nfunction cards() {\n    // Клас для сворення карточок товару\n\n    \n    // Клас для карточок\n    \n    class MenuCard {\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\n            this. src = src; //посилання на фото\n            this.alt = alt; // альтернативне фото\n            this.title = title; // заголовок\n            this.descr = descr; // текст блоку\n            this.price = price; // ціна, яка буде генеруватись в залежності від курсу доллара\n            this.classes = classes; // REST - оператор для додаткових класів\n            this.parent = document.querySelector(parentSelector); // пошук батьківського елементу\n            this.transfer = 38; // курс доллара (потім можна буде вказати в залежності від курсу нбу)\n            this.changeToUAN(); // метод конвертації валют\n        }\n\n        // Конвертація валют\n        changeToUAN() {\n            this.price = this.price * this.transfer;\n        }\n\n        // Додавання елементів до блоку HTML\n        render() {\n            const element = document.createElement('div'); // сворити дів\n            // Створення в змінній тегів для подальшого вставлення\n\n            // classes створений для зберігання додаткових класів. Тут іде перевірка, чи є елементи в масиві, якщо ні, додає дів з класом \"menu__item\"\n            if(this.classes.length === 0){\n                this.classes = \"menu__item\"; // Присвоєння для classes 'menu__item'\n                element.classList.add(this.classes); // Додавання класу\n            } else {\n                this.classes.forEach(className => element.classList.add(className)); // Якщо клас вже тут записаний, то додає той, що по замовчуванню\n            }\n\n            element.innerHTML= `\n                    <img src=${this.src} alt=${this.alt}>\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                    <div class=\"menu__item-descr\">${this.descr}</div>\n                    <div class=\"menu__item-divider\"></div>\n                    <div class=\"menu__item-price\">\n                        <div class=\"menu__item-cost\">Цена:</div>\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n                    </div>\n            `;\n            this.parent.append(element); // Додавання тегів з інформацією до сайту\n        }\n    }\n\n    getResource('http://localhost:4000/menu')\n        .then(data => {\n            data.forEach(({img, altimg, title, descr, price}) => { // деструктиризація | витягання всіх даних із бази\n\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\n            });\n        });\n\n\n    // axios.get('http://localhost:4000/menu')\n    //     .then(data => {\n    //         data.data.forEach(({img, altimg, title, descr, price}) => {\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\n    //         });\n    //     });\n\n\n    // 2 ВАРІАНТ\n\n    // getResource('http://localhost:4000/menu')\n    //     .then(data => createCard(data));\n\n\n    // function createCard(data) {\n    //     data.forEach(({img, altimg, title, descr, price}) => {\n    //         const element = document.createElement('div');\n\n    //         element.classList.add('menu__item');\n\n    //         element.innerHTML = `\n    //             <img src=${img} alt=${altimg}>\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\n    //             <div class=\"menu__item-descr\">${descr}</div>\n    //             <div class=\"menu__item-divider\"></div>\n    //             <div class=\"menu__item-price\">\n    //                 <div class=\"menu__item-cost\">Цена:</div>\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\n    //             </div>\n    //         `;\n\n    //         document.querySelector('.menu .container').append(element);\n    //     })\n    // }\n}\n\nexport default cards;","const postData = async (url, data) => {\n    const res = await fetch(url, {\n        method: 'POST',\n        body: data,\n        headers: {\n            'Content-type' : 'application/json'\n        }\n    });\n\n    return await res.json(); // трансформація промісу в json\n};\n\nconst getResource = async (url) => {\n    const res = await fetch(url);\n\n    if (!res.ok) { // .ok - оператор, який показує, що код виконався без помилок. Тут не окей !\n        throw new Error(`Could not fetch ${url}, status ${res.status}`); \n    }\n\n    return await res.json(); // трансформація промісу в json\n}\n\nexport {postData};\nexport {getResource};\n","function calculator() {\n    // Calculator\n\n    const result = document.querySelector('.calculating__result span'); // отримуємо span для виводу результату калорій на день\n    let sex, height, weight, age, ratio; // створюємо змінні для отримання даних про користувача та додаємо значення по замовчуванню для полу та рівня активності\n\n    if(localStorage.getItem('sex')) {\n        sex = localStorage.getItem('id');\n    } else {\n        sex = 'female';\n        localStorage.setItem('sex', 'female');\n    }\n\n    if(localStorage.getItem('ratio')){\n        ratio = localStorage.getItem('ratio');\n    } else {\n        ratio = 1.375;\n        localStorage.setItem('ratio', 1.375);\n    }\n\n    function calcTotal() {\n        if(!sex || !height || !weight || !age || !ratio) { // Якщо зоч одне із полів не заповнене, не виводити значення\n            result.textContent = '____';\n            return;\n        }\n        if(sex === 'female'){ // Записуємо формули, в яку додаємо ф-цію Math.round, який округлює значення до цілого\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\n        } else {\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        }\n    }\n\n    calcTotal();\n    \n    // Ф-ція, яка додає та забирає клас активності для статі і активності для того, щоб зелене віконечко перемикалося відповідно до того, що записано в памʼяті\n    function initLocalSettings(selector, activeClass){\n        const elements = document.querySelectorAll(selector); // отримуємо всі елементи (стать і активність)\n\n        elements.forEach(elem => { // перебираємо\n            elem.classList.remove(activeClass); // прибираємо клас активності для всіх\n            if(elem.getAttribute('id') === localStorage.getItem('sex')) { // Якщо стать вже записана, додати їй клас активності\n                elem.classList.add(activeClass);\n            }\n            if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) { // Якщо значення активності вже є в памʼяті, додати йому клас активності\n                elem.classList.add(activeClass);\n            }\n        });\n    }\n\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active'); // передаємо значення класу і id (селектору) і класу активності\n\n    function getStaticInformation (selector, activeClass) {\n        const elements = document.querySelectorAll(selector); // прийматиме батьківський елемент для подальшої обробки події клік\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', (e) => {\n                if(e.target.getAttribute('data-ratio')) { // Якщо подія виникне на елементі із атрибутом дата ратіо, то присвоїти значення цього атрибуту до змінної\n                    ratio = +e.target.getAttribute('data-ratio');\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\n                } else { // Якщо подія виникне на елементі з статтю, то додати значення із айді\n                    sex = e.target.getAttribute('id');\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\n                }\n\n                elements.forEach(elem => { // Видалити клас активності дляя всіх елементів\n                    elem.classList.remove(activeClass);\n                });\n\n                e.target.classList.add(activeClass); // До елементу, на якому спрацювала подія, додати клас активності\n\n                calcTotal(); // Виклик ф-ції обрахунку для того, щоб очислювання виконувались при кожній зміні в калькуляторі\n            });\n        });\n    }\n\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active'); // ТУТ НЕ НУЖНО ТОЧКУ? Нет не нужно, одиннаково работает что с ней, что без нее\n\n    function getDynamicInformation(selector) { // Отримання інформації, яку вводить користувач\n        const input = document.querySelector(selector); // Отримуємо інпут\n\n        input.addEventListener('input', () => { // Відслідковуємо, де виникла подія\n            if(input.value.match(/\\D/g)){ // Додаємо перевірку на введення числа, а не інших виразів\n                input.style.border = '1px solid red';\n            } else {\n                input.style.border = 'none';\n            }\n            switch(input.getAttribute('id')){ // отримуємо атрибут id і перебираємо, що це саме було і отримуємо велью (те, що ввів користувач)\n                case 'height' :\n                    height = +input.value; \n                    break;\n                \n                case 'weight' :\n                    weight = +input.value;\n                    break;\n\n                case 'age' :\n                    age = +input.value;\n                    break;\n            }\n\n            calcTotal(); // виклик, щоб при будь-яких змінах перераховувались\n        });\n    }\n\n    // Передаємо класи інпутів\n    getDynamicInformation('#height'); \n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n}\n\nexport default calculator;","import {closeModal, openModal} from './modal';\nimport {postData} from '../services/services';\nfunction forms(formsSelector, modalTimerId) {\n    const forms = document.querySelectorAll(formsSelector);\n    const message = {\n        loading: 'img/form/spinner.svg',\n        success: 'Спасибо! Скоро мы с вами свяжемся',\n        failure: 'Что-то пошло не так...'\n    };\n\n    forms.forEach(item => {\n        bindPostData(item);\n    });\n\n    function bindPostData(form) {\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            let statusMessage = document.createElement('img');\n            statusMessage.src = message.loading;\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n            form.insertAdjacentElement('afterend', statusMessage);\n        \n            const formData = new FormData(form);\n\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\n\n            postData('http://localhost:4000/requests', json)\n            .then(data => {\n                console.log(data);\n                showThanksModal(message.success);\n                statusMessage.remove();\n            }).catch(() => {\n                showThanksModal(message.failure);\n            }).finally(() => {\n                form.reset();\n            });\n        });\n    }\n\n    function showThanksModal(message) {\n        const prevModalDialog = document.querySelector('.modal__dialog');\n\n        prevModalDialog.classList.add('hide');\n        openModal('.modal', modalTimerId);\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n        thanksModal.innerHTML = `\n            <div class=\"modal__content\">\n                <div class=\"modal__close\" data-close>×</div>\n                <div class=\"modal__title\">${message}</div>\n            </div>\n        `;\n        document.querySelector('.modal').append(thanksModal);\n        setTimeout(() => {\n            thanksModal.remove();\n            prevModalDialog.classList.add('show');\n            prevModalDialog.classList.remove('hide');\n            closeModal('.modal');\n        }, 4000);\n    }\n}\n\nexport default forms;","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\n    // Slider\n\n    // Створюються змінні для елементів порядкового номеру і стрілочок, індекс елементів слайдеру, скільки всього сторінок, поточний номер сторінки\n\n    // Додавання 0 для 2-го варіанту\n\n    let slideIndex = 1,\n        offset = 0; // відповідає за відступи в 2 варіанті\n    const slides = document.querySelectorAll(slide),\n          slider = document.querySelector(container),\n          prev = document.querySelector(prevArrow),\n          next = document.querySelector(nextArrow),\n          total = document.querySelector(totalCounter),\n          current = document.querySelector(currentCounter),\n          // Змінні для 2 варіанту слайдеру\n          slidesWrapper = document.querySelector(wrapper),\n          slidesField = document.querySelector(field),\n          width = window.getComputedStyle(slidesWrapper).width;// отримання ширини батьківського блоку за допомогою getComputedStyle (примінені вже на сторінці стилі | можна глянути в консолі браузера справа)\n\n    if (slides.length < 10) {\n        total.textContent = `0${slides.length}`;\n        current.textContent = `0${slideIndex}`;\n    } else {\n        total.textContent = slides.length;\n        current.textContent = slideIndex;\n    }\n\n\n    slidesField.style.width = 100 * slides.length + '%'; // додавання ширини блоку (кількість слайдів помножити на 100%)\n    slidesField.style.display = 'flex'; // додаємо дісплей флекс, щоб все вишикувалось в рядок\n    slidesField.style.transition = '0.5s all'; // додаємо плавність\n\n    slidesWrapper.style.overflow = 'hidden'; // скриваємо всі не актуальні елементи\n\n    // Додавання до кожного слайду фіксовану ширину\n    slides.forEach(slide => {\n        slide.style.width = width;\n    });\n\n    slider.style.position = 'relative'; // встановлюємо позшн релатів для навігації в слайдері\n\n    const indicators = document.createElement('ol'),\n          dots = [];\n\n    indicators.classList.add('carousel-indicators');\n\n    slider.append(indicators);\n\n    // Створення кнопочок відносно кількості слайдів у слайдері\n    for(let i = 0; i < slides.length; i++){\n        const dot = document.createElement('li');\n        dot.setAttribute('data-slide-to', i + 1); // додавання атрибуту\n        dot.classList.add('dot');\n\n        if(i == 0){\n            dot.style.opacity = 1;\n        }\n        \n        indicators.append(dot);\n        dots.push(dot);\n    }\n    \n    function deleteNotDigits(str) {\n        return +str.replace(/\\D/g, ''); \n    }\n\n    next.addEventListener('click', () => {\n        // Якщо дійшли до кінця, повернутись назад\n        if(offset == deleteNotDigits(width) * (slides.length - 1)){ // тут width повертається як строка '500px', тому треба використати метод slice, щоб вирізати число, починаючи з нульового індексу, і закінчуюючи -2 символами з кінця\n            offset = 0;\n        } else {\n            offset += deleteNotDigits(width); // додаємо ширину слайду (перехід)\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if(slideIndex == slides.length) {\n            slideIndex = 1;\n        } else {\n            slideIndex ++;\n        }\n\n        if(slides.length < 10) {\n            current.textContent = `0${slideIndex}`;\n        } else {\n            current.textContent = slideIndex;\n        }\n\n        dots.forEach(dot => dot.style.opacity = '.5');\n        dots[slideIndex - 1].style.opacity = '1';\n    });\n\n    prev.addEventListener('click', () => {\n        // Якщо повернулись на перший слайд, перейти на останній\n        if(offset == 0){ \n            offset = deleteNotDigits(width) * (slides.length - 1); // присвоюємо для офсет значення останнього слайду\n            \n        } else {\n            offset -= deleteNotDigits(width); // не додаємо, а віднімаємо ширину слайду (перехід)\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n        \n        if(slideIndex == 1) {\n            slideIndex = slides.length;\n        } else {\n            slideIndex --;\n        }\n\n        if(slides.length < 10) {\n            current.textContent = `0${slideIndex}`;\n        } else {\n            current.textContent = slideIndex;\n        }\n\n        dots.forEach(dot => dot.style.opacity = '.5');\n        dots[slideIndex - 1].style.opacity = '1';\n    });\n\n    dots.forEach(dot => {\n        dot.addEventListener('click', (e) => {\n            const slideTo = e.target.getAttribute('data-slide-to');\n\n            slideIndex = slideTo;\n            offset = deleteNotDigits(width) * (slideTo - 1);\n\n            slidesField.style.transform = `translateX(-${offset}px)`;\n\n            if(slides.length < 10) {\n                current.textContent = `0${slideIndex}`;\n            } else {\n                current.textContent = slideIndex;\n            }\n\n            dots.forEach(dot => dot.style.opacity = '.5');\n            dots[slideIndex - 1].style.opacity = '1';\n        })\n    })\n\n\n\n\n\n                            // 1 ВАРІАНТ\n\n    // showSlides(slideIndex);\n    /* // Додавання нуля в значення всіх сторінок слайдеру\n    if (slides.length < 10) {\n        total.textContent = `0${slides.length}`\n    } else {\n        total.textContent = slides.length;\n    }\n\n    function showSlides(n) {\n        if (n > slides.length) { // Повертатися на 1 елемент після прогортування останнього\n            slideIndex = 1;\n        }\n        if (n < 1) { // Якщо менше 1, то переходити на останній\n            slideIndex = slides.length;\n        }\n\n        slides.forEach((item) => item.classList.add('hide'));\n        slides[slideIndex - 1].classList.remove('hide');\n        slides[slideIndex - 1].classList.add('show');\n\n\n        // Якщо номер поточної сторінки менше 10, додавання 0 на початок\n        if (slides.length < 10) {\n            current.textContent = `0${slideIndex}`\n        } else {\n            current.textContent = slideIndex;\n        }\n    }\n\n    function plusSlides (n) {\n        showSlides(slideIndex += n);\n    }\n\n    prev.addEventListener('click', function () {\n        plusSlides(-1);\n    })\n\n    next.addEventListener('click', function () {\n        plusSlides(1);\n    })*/\n\n\n\n\n                            // 2 ВАРІАНТ\n    /* (Зміни в html: обернути слайдери в окремий дів із класом 'offer__slider-inner', тому що в стандартних слайдерах перевертання працює по принципу галереї, тобто заховані діви знаходяться на сторінці по бокам і просто скриті) */\n\n    /*\n    Тут принцип роботи наступний: блоку 'offer__slider-wrapper' буде наданий клас 'hide', що означатиме, шо елементи, які не підходять під розмір блоку, будуть просто перекриті (скриті)\n\n    При натисканні на кнопки, ми будемо не переключати слайди, а передвигати їх відносно батьківського блоку\n    \n    */\n}\n\nexport default slider;"],"names":["openModal","modalSelector","modalTimerId","modal","document","querySelector","classList","add","remove","body","style","overflow","clearInterval","closeModal","window","addEventListener","setTimeout","tabsSelector","tabsContentSelector","tabsParentSelector","activeClass","tabs","querySelectorAll","tabsContent","tabsParent","hideTabContent","forEach","item","showTabContent","i","event","target","contains","slice","triggerSelector","modalTrigger","btn","e","getAttribute","code","showModalByScroll","scrollY","documentElement","clientHeight","scrollHeight","removeEventListener","id","deadline","getZero","num","selector","endtime","timer","days","hours","minutes","seconds","timeInterval","setInterval","updateClock","t","Date","parse","Math","floor","getTimeRemaining","innerHTML","total","setClock","MenuCard","constructor","src","alt","title","descr","price","parentSelector","classes","this","parent","transfer","changeToUAN","render","element","createElement","length","className","append","async","res","fetch","url","ok","Error","status","json","getResource","then","data","img","altimg","cards","result","sex","height","weight","age","ratio","calcTotal","textContent","round","initLocalSettings","elem","localStorage","getItem","getStaticInformation","elements","setItem","getDynamicInformation","input","value","match","border","calculator","formsSelector","showThanksModal","message","prevModalDialog","thanksModal","form","preventDefault","statusMessage","cssText","insertAdjacentElement","formData","FormData","method","headers","postData","JSON","stringify","Object","fromEntries","entries","console","log","catch","finally","reset","forms","container","slide","nextArrow","prevArrow","totalCounter","currentCounter","wrapper","field","slideIndex","offset","slides","slider","prev","next","current","slidesWrapper","slidesField","width","getComputedStyle","display","transition","position","indicators","dots","dot","setAttribute","opacity","push","deleteNotDigits","str","replace","transform","slideTo"],"sourceRoot":""}